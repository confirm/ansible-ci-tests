#!/usr/bin/env python
#
# -*- coding: utf-8 -*-
#
# Copyright (c) 2015 confirm IT solutions
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import os
import sys

# Search for ansibleci module relative to script's dir and parent dir.
sd = os.path.abspath(os.path.dirname(sys.argv[0]))
pd = os.path.abspath(os.path.join(sd, '..'))
for d in (sd, pd):
    if os.path.isfile(os.path.join(d, 'ansibleci', '__init__.py')):
        sys.path.insert(0, d)
        break

# Make sure current working directory is also in path.
d = os.getcwd()
if d not in sys.path:
    sys.path.insert(0, d)


def main(basedir=None, config_module=None):
    '''
    Main procedure for the ansibleci script.
    '''
    from ansibleci.config import Config
    from ansibleci.runner import Runner

    # Create config instance.
    config = Config(load_defaults=True)

    # Load additional configuration Python module.
    if config_module:
        module = __import__(config_module)
        config.add_module(module)

    # Set basedir.
    if basedir:
        config.BASEDIR = basedir

    # Start runner.
    return Runner(config=config).run()

if __name__ == '__main__':

    # Setup args parser.
    import argparse
    parser = argparse.ArgumentParser(description='Ansible CI tests')
    parser.add_argument('BASEDIR', help='Path to Ansible project directory', type=str)
    parser.add_argument('--config', dest='config', help='Python module to load configuration parameters from', type=str)
    args = parser.parse_args()

    # Call main() function and exit properly.
    sys.exit(int(not main(basedir=args.BASEDIR, config_module=args.config)))
